#!/bin/bash
######################################################################
#
PACKAGE_NAME=""
PACKAGE_FILE=""
PACKAGE_DESC="Start Screen"
SBUS="0.0"

source D-LFS.functions
START_TIME_long=`$TIMESTAMP_long`  #Just a tmp start time until end of 1.00
header 0 < 0/ENTER  #0 suppresses log_start_time
                    #"< 0/ENTER" skips "Press Enter to continue:"
echo $START_TIME_long

#Check for valid parameters. $1 may = 1 or 2 or 3
if [[ "$1" == "1" || "$1" == "2" || "$1" == "3" ]]; then
   AUTO_BUILD=$1
else
   cat 0/Welcome.1
   Press_Enter_to_continue
   clear
   cat 0/Welcome.2
   cat 0/Welcome.3
   echo -en $YELLOW
   read  -p "Enter 1, 2, or 3: " AUTO_BUILD
   if [[ "$AUTO_BUILD" != "2" && "$AUTO_BUILD" != "3" ]]; then AUTO_BUILD="1";fi
   echo -en $NORMAL
fi
echo "AUTO_BUILD=$AUTO_BUILD" >> $BUILD_DATA #Used to skip prompts when = 3.

BOS="$AUTO_BUILD : ${AUTO_BUILD_desc[$AUTO_BUILD]}"
echo "Build Option Selected: $BOS" | tee -a $BUILD_LOG


footer 0  #0 suppresses log_end_time


#Record now as the START_TIME for the entire build.
#FINISH_TIME will be saved at end of 7/9.99_Final_Details
#The difference between those two times, in addition to the actual build time, 
#will also include the time spent by any prompt waiting for a response, the
#time between packages, etc.
echo "START_TIME=$($TIMESTAMP)"                 >> $BUILD_DATA
echo "START_TIME_long=\"$($TIMESTAMP_long)\" "  >> $BUILD_DATA

if [[ "$AUTO_BUILD" = "2" || "$AUTO_BUILD" = "3" ]]; then exec 0/supergo-all; fi

cat << "EOF"

Option 1, manual/Single Action build selected.  To continue:
  Run each* script, in order, in each of the directories:  4, 5, 6, 7
  Run them from this (the scripts) directory.
    (*Except for 5/5.98_Less, run it before 5.34_Stripping)

  IE: To continue, run:  4/2.00_Confirm

              Then run:  4/2.03_Creating_File_System

      etc... Or, rerun:  ./1.00_START,  and select option 2 or 3.

EOF
