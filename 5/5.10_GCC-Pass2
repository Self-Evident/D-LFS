#!/bin/bash
######################################################################
#
PACKAGE_NAME="gcc-4.6.1"
PACKAGE_FILE="${PACKAGE_NAME}.tar.bz2"
PACKAGE_DESC=": Pass 2"
SBUS="7.5"  #7.0

source D-LFS.functions

header_log_prep

patch -Np1 -i ../${PACKAGE_NAME}-startfiles_fix-1.patch  &>> $BUILD_LOG

cp -v gcc/Makefile.in{,.orig}  &>> $BUILD_LOG
sed 's@\./fixinc\.sh@-c true@' gcc/Makefile.in.orig > gcc/Makefile.in

cp -v gcc/Makefile.in{,.tmp}  &>> $BUILD_LOG
sed 's/^T_CFLAGS =$/& -fomit-frame-pointer/' gcc/Makefile.in.tmp \
  > gcc/Makefile.in

for file in \
 $(find gcc/config -name linux64.h -o -name linux.h -o -name sysv4.h)
do
  cp -uv $file{,.orig}  &>> $BUILD_LOG
  sed -e 's@/lib\(64\)\?\(32\)\?/ld@/tools&@g' \
  -e 's@/usr@/tools@g' $file.orig > $file
  echo '
#undef STANDARD_INCLUDE_DIR
#define STANDARD_INCLUDE_DIR 0
#define STANDARD_STARTFILE_PREFIX_1 ""
#define STANDARD_STARTFILE_PREFIX_2 ""' >> $file
  touch $file.orig
done

tar -jxf ../mpfr-3.1.0.tar.bz2 &>> $BUILD_LOG
mv -v mpfr-3.1.0 mpfr          &>> $BUILD_LOG
tar -jxf ../gmp-5.0.2.tar.bz2  &>> $BUILD_LOG
mv -v gmp-5.0.2 gmp            &>> $BUILD_LOG
tar -zxf ../mpc-0.9.tar.gz     &>> $BUILD_LOG
mv -v mpc-0.9 mpc              &>> $BUILD_LOG

mkdir  -v $BUILD_DIR  &>> BUILD_LOG
cd        $BUILD_DIR  &>> BUILD_LOG

CC="$LFS_TGT-gcc -B/tools/lib/" \
    AR=$LFS_TGT-ar RANLIB=$LFS_TGT-ranlib \
    ../${PACKAGE_NAME}/configure --prefix=/tools \
    --with-local-prefix=/tools --enable-clocale=gnu \
    --enable-shared --enable-threads=posix \
    --enable-__cxa_atexit --enable-languages=c,c++ \
    --disable-libstdcxx-pch --disable-multilib \
    --disable-bootstrap --disable-libgomp \
    --without-ppl --without-cloog \
    --with-mpfr-include=$(pwd)/../${PACKAGE_NAME}/mpfr/src \
    --with-mpfr-lib=$(pwd)/mpfr/src/.libs  &>> $BUILD_LOG

make                      &>> $BUILD_LOG

make install              &>> $BUILD_LOG

echo                      &>> $BUILD_LOG
echo '#Creating link...'  &>> $BUILD_LOG
ln -vs gcc /tools/bin/cc  &>> $BUILD_LOG


echo &>> $BUILD_LOG
echo === Sanity Check ===                                        &>> $BUILD_LOG
echo 'main(){}' > dummy.c
cc dummy.c
readelf -l a.out | grep ': /tools'                               &>> $BUILD_LOG
echo === The above should resemble the following: ===            &>> $BUILD_LOG
echo '      [Requesting program interpreter: /tools/lib/ld-linux.so.2]'  &>> $BUILD_LOG
echo &>> $BUILD_LOG

rm -v dummy.c a.out  &>> $BUILD_LOG

cleanup_log_footer
